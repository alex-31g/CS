/*
Сортировка пузырьком - алгоритм сортировки последовательности чисел в массиве, суть которого в сравнении пары соседних элементов, и если они стоят в неправильном порядке, то их меняют местами.

АЛГОРИТМ:
1) Берём первый и второй элементы - если они стоят в неправильном порядке, меняем их местами
2) Берём второй и третий элементы - если они стоят в неправильном порядке, меняем их местами
3) ... и т.д. до конца массива
4) В результате первого прохода на последнее место «всплывёт» максимальный элемент
5) Снова обходим массив (теперь от первого элемента до предпоследнего) и меняем по пути неотсортированных соседей
6) Второй по величине элемент окажется на предпоследнем месте
7) Продолжая в том же духе, будем обходить неотсортированную часть массива, запихивая найденные максимумы в конец

ПРИМЕР:
[ 5, 2, 1, 4, 3 ]     <-- исходный массив

[ (2, 5), 1, 4, 3 ]     <-- (1) первый и второй элементы стоят в неправильном порядке - меняем их местами
[ 2, (1, 5), 4, 3 ]     <-- (2) второй и третий элементы стоят в неправильном порядке - меняем их местами
[ 2, 1, (4, 5), 3 ]     <-- (3) ... и т.д. до конца массива
[ 2, 1, 4, (3, 5) ]     <-- (4) В результате первого прохода на последнее место «всплывёт» максимальный элемент
												<-- (5, 6, 7)

Временная сложность - O(N^2).
*/

// ======================
// В порядке возростания
// ======================

const arr = [ 6, 7, 1, 1, -8, 9, 3, -8, 6, -5, 4, 2, 1 ];
let count = 0;

function bubbleSort(arr) {
	for (let i = 0; i < arr.length - i; i++) {
		for (let j = 0; j < arr.length - 1; j++) {
			count++;
			let first = arr[j];
			let second = arr[j + 1];
			if (first > second) {
				arr[j] = second;
				arr[j + 1] = first;
			}
		}
	}
	return arr;
}

console.log(bubbleSort(arr));
console.log(count);

// ===================
// В порядке убывания
// ===================